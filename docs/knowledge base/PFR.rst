.. _`Порядок подключения к системе ЭДО ПФР`: https://www.kontur-extern.ru/how_to_connect/connect_pfr
.. _`Отчетность в ПФР для ЮЛ и ИП в 2019 году`: https://kontur.ru/extern/spravka/254-otchetnost_pfr
.. _`СЗВ-М в 2019 году`: https://kontur.ru/extern/spravka/286-szv

Документооборот с ПФР
=====================

.. contents:: Оглавление
   :depth: 3

Через API Контур.Экстерна в Пенсионный Фонд России можно отправить следующие формы отчетности:

* СЗВ-М реестр застрахованных лиц (ежемесячная отчетность);
* СЗВ-СТАЖ сведения о стаже застрахованных лиц;
* СЗВ-КОРР корректировка ранее учтенных сведений;
* ОДВ-1 корректировка или отмена сведений о рабочих местах в особых условиях труда;
* Квартальная отчетность ДСВ-3;
* АДВ 1,2,3 - Анкета застрахованного лица.

Также в Пенсионный Фонд России можно отправить другие формы отчетности через систему ЭДОК:

  * заявления на подключение к ЭДОК
  * СЗВ-ТД.

  Подробнее про данные документообороты см. в статье :doc:`Отчетность в ПФР по форме СЗВ-ТД</knowledge base/szvtd>`


Особенности формирования отчетности в ПФР
-----------------------------------------

1. В метаинформации черновика заполняется регистрационная информация, которую необходимо передавать в ПФР: код УПФР, регистрационный номер организации в ПФР.
2. Регистрационный номер и код УПФР всегда необходимо передавать в формате ПФР через дефис. 
    
    * Маска кода УПФР: ХХХ-ХХХ.
    * Маска регистрационного номера: ХХХ-ХХХ-ХХХХХХ.

3. В черновике должен быть :ref:`файл описи<rst-markup-invent-file>`, в котором указаны дата и время создания файла. 
4. Черновик будет доступен для отправки только в течение **24 часов** от указанного в описи времени. Если через 24 часа черновик не отправлен, нужно снова сформировать файл описи. Так как время и дата файла описи не должны отличаться от даты и времени отправки более чем на 24 часа.
5. В документообороте с ПФР ответными документами являются подписи полученных от УПФР файлов. 

Процесс работы с API
--------------------

Создание черновика 
~~~~~~~~~~~~~~~~~~

1. Если нет файла описи:

   * Создаем :doc:`DraftsBuilder</knowledge base/DraftsBuilder>` с типом urn:drafts-builder:pfr-report, в метаинформации обязательно заполнить в RecipientInfo поле ``upfr-code``, в AccountInfo поле ``registration-number-pfr`` — это информация, которая должна быть передана в УПФР с отчетом. 
   
   Пример регистрационного номера юридического лица в ПФР: 000-000-000000. Пример кода УПФР: 000-000.

   .. container:: toggle

      .. container:: header

         **Пример тела запроса для создания DraftsBuilder**
   
      .. code-block:: json

         {
            "Sender": {
                "Inn": "7381415822",
                "Kpp": "111135111",
                "Name": "",
                "Certificate": {
                    "Content": "MIIJyDCCCXW...plBLbm61IfFrgjCSh3pteYQ9XEx2s8eFFg"
                },
                "IsRepresentative": false,
                "IPAddress": "8.8.8.8"
            },
            "Payer": {
                "Inn": "7381415822",
                "Name": "",
                "Organization": {
                    "Kpp": "111135111"
                },
                "RegistrationNumberFss": null,
                "RegistrationNumberPfr": "823-858-020760"
            },
            "Recipient": {
                "IfnsCode": null,
                "MriCode": null,
                "TogsCode": null,
                "UpfrCode": "666-666",
                "FssCode": null,
                "RegistrationIfnsCode": null
            },
            "BuilderType": "urn:drafts-builder:pfr-report",
            "BuilderData": null
         }

   * Когда все файлы для отчета с подписями добавлены в документы, запускаем сборку черновика. В результате в черновике будут все добавленные документы и файл "Описание отчетности". :ref:`Подробнее о процессе работы с DraftsBuilder<rst-markup-db-proc>`.

   * Переходим к :doc:`работе с черновиком</drafts/порядок работы с черновиками>`. Перед проверкой черновика обязательно нужно подписать файл описи.  

2. Если файл описи есть, переходим сразу к :doc:`работе с черновиком</drafts/порядок работы с черновиками>`.

Документооборот
~~~~~~~~~~~~~~~

.. seealso:: Подробная схема и описание возможных статусов документооборота с ПФР представлены в разделе :ref:`спецификации<rst-markup-prf-status>`.

1. Пользователь отправляет отчет в УПФР.

2. В течение 2-х рабочих дней с момента отправки отчета УПФР высылает **квитанцию** (подтверждение о получении).
    
  *Квитанция* (подтверждение о получении) – документ, подтверждающий факт доставки отправленных документов в ПФР. Регламентированный срок получения квитанции составляет 2 рабочих дня.
    
3. В течение 4-х рабочих дней с момента отправки отчета УПФР высылает **протокол контроля**.
    
  *Протокол контроля* — документ, который содержит результат проверки отчета на стороне контролирующего органа и имеет статус. Положительный протокол и свидетельствует об удачной сдаче отчета в ПФР в случае, если ошибок не обнаружено. Отрицательный протокол свидетельствует о наличии ошибок, в таком случае требуется повторная отправка отчета. Регламентированный срок получения протокола составляет 2 рабочих дня с момента получения квитанции о доставке.

4. Пользователь подписывает поступивший протокол из УПФР, что является подтверждением получения протокола.

.. note::
   В документообороте с УПФР **ответными документами являются подписи расшифрованных контентов** протокола контроля и всех приложений к протоколу. Подписи должны быть отправлены все вместе. Для этого были реализованы :ref:`методы для работы с ответными документами в ПФР<rst-markup-pfr-reply>`.
  
5. Когда пользователь получает протокол контроля (документ с типом urn:document:pfr-report-protocol), под ним будет сформирована ссылка на создание пакета ответного документа. Метод: :ref:`POST GeneratePfrReply<rst-markup-GeneratePfrReply>`. В результате метод вернет сгенерированную структуру пакета ответных документов. 

  Внутри пакета ответных документов в каждом документе будет лежать зашифрованный контент документов из УПФР. Также в документе будет ссылка, чтобы скачать его. 

6. Пользователь для каждого документа сам расшифровывает контент и загружает его обратно: в документе будет ссылка на добавление расшифрованного контента. Метод: :ref:`PUT SavePfrReplyDocumentDecryptedContent<rst-markup-SavePfrReplyDocumentDecryptedContent>`.

7. Далее необходимо во все документы приложить подпись пользователя, которой он расшифровывал контент, в формате base64. В документе также будет ссылка. Метод: :ref:`PUT SavePfrReplyDocumentSignature<rst-markup-SavePfrReplyDocumentSignature>`.

8. Когда ко всем документам будут приложены расшифрованные контенты и подписи, можно отправлять сформированный пакет ответных документов. Метод: :ref:`POST SendPfrReplyDocument<rst-markup-SendPfrReplyDocument>`.


Полезные ссылки по отчетности в ПФР
-----------------------------------

* `Порядок подключения к системе ЭДО ПФР`_ - в данной статье раскрыты особенности оформления юридических документов. Для некоторых регионов существуют свои правила. 
* `Отчетность в ПФР для ЮЛ и ИП в 2019 году`_
* `СЗВ-М в 2019 году`_
