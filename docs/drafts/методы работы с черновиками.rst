.. _`Черновики и конструктор черновиков (draftsbuilder)`: https://developer.kontur.ru/doc/extern.drafts
.. _`POST Draft`: https://developer.kontur.ru/doc/extern.drafts/method?type=post&path=%2Fv1%2F%7BaccountId%7D%2Fdrafts
.. _`PUT Draft`: https://developer.kontur.ru/doc/extern.drafts/method?type=put&path=%2Fv1%2F%7BaccountId%7D%2Fdrafts%2F%7BdraftId%7D
.. _`DELETE Draft`: https://developer.kontur.ru/doc/extern.drafts/method?type=delete&path=%2Fv1%2F%7BaccountId%7D%2Fdrafts%2F%7BdraftId%7D
.. _`GET Draft`: https://developer.kontur.ru/doc/extern.drafts/method?type=get&path=%2Fv1%2F%7BaccountId%7D%2Fdrafts%2F%7BdraftId%7D
.. _`GET Meta`: https://developer.kontur.ru/doc/extern.drafts/method?type=get&path=%2Fv1%2F%7BaccountId%7D%2Fdrafts%2F%7BdraftId%7D%2Fmeta
.. _`PUT Meta`: https://developer.kontur.ru/doc/extern.drafts/method?type=put&path=%2Fv1%2F%7BaccountId%7D%2Fdrafts%2F%7BdraftId%7D%2Fmeta
.. _`POST Check`: https://developer.kontur.ru/doc/extern.drafts/method?type=post&path=%2Fv1%2F%7BaccountId%7D%2Fdrafts%2F%7BdraftId%7D%2Fcheck
.. _`POST Prepare`: https://developer.kontur.ru/doc/extern.drafts/method?type=post&path=%2Fv1%2F%7BaccountId%7D%2Fdrafts%2F%7BdraftId%7D%2Fprepare
.. _`POST Send`: https://developer.kontur.ru/doc/extern.drafts/method?type=post&path=%2Fv1%2F%7BaccountId%7D%2Fdrafts%2F%7BdraftId%7D%2Fsend
.. _`GET DraftTasks`: https://developer.kontur.ru/doc/extern.drafts/method?type=get&path=%2Fv1%2F%7BaccountId%7D%2Fdrafts%2F%7BdraftId%7D%2Ftasks
.. _`GET DraftTask`: https://developer.kontur.ru/doc/extern.drafts/method?type=get&path=%2Fv1%2F%7BaccountId%7D%2Fdrafts%2F%7BdraftId%7D%2Ftasks%2F%7BapiTaskId%7D
.. _`модель данных`: https://developer.kontur.ru/doc/extern.drafts/models

Методы для работы с черновиками
===============================

Подробная спецификация методов показана в Swagger в разделе `Черновики и конструктор черновиков (draftsbuilder)`_.

.. note:: Черновик можно отправить только один раз. После успешной отправки черновик будет храниться в течение 1 года. 

Список доступных методов:

* `Создание черновика`_
* `Получение черновика`_
* `Редактирование черновика`_
* `Удаление черновика`_
* `Получение описания черновика`_
* `Редактирование описания черновика`_
* `Проверка документов в черновике`_
* `Подготовка документов в черновике к отправке`_
* `Отправка документов из черновика`_
* `Получение списка задач черновика`_
* `Проверка статуса задачи черновика по TaskId`_

.. _rst-markup-createdraft:

Создание черновика 
------------------

Метод: `POST Draft`_

С помощью этого метода создается черновик с минимально необходимым набором мета-информации, который в будущем можно при необходимости отредактировать или дополнить, используя метод `Редактирование описания черновика`_.

Получение черновика 
-------------------

Метод: `GET Draft`_

В ответ на вызов данного метода можно получить всю актуальную информацию по черновику:

* заполненную на данный момент мета-инфомарцию;
* перечень находящихся в черновике документов;
* статус черновика (новый, проверен, готов к отправке или отправлен).

Если черновик уже был отправлен, то будет ссылка на созданный документооборот.

Редактирование черновика 
------------------------

Метод: `PUT Draft`_

Метод обновляет значения параметров черновика. Если черновик с переданным идентификатором не существует, метод его создаст. 

Удаление черновика 
------------------

Метод: `DELETE Draft`_

Получение описания черновика 
----------------------------

Метод: `GET Meta`_

Получение только мета-информации черновика.

Редактирование описания черновика 
---------------------------------
Метод: `PUT Meta`_

.. _rst-markup-check:

Проверка документов в черновике 
-------------------------------

Метод: `POST Check`_

Вызовом данного метода можно проверить все документы, находящиеся в черновике. Документы проходят форматно-логические контроли по отдельности, но при наличии нескольких документов в черновике или подписей к документам возможно проведение кросс-проверок, то есть проверок на соответствие документов и подписей между собой.

.. _rst-markup-prepare:

Подготовка документов в черновике к отправке 
--------------------------------------------

Метод: `POST Prepare`_

С помощью данного метода документы подготавливаются к транспортировке их в контролирующий орган: происходит шифрование и сжатие согласно транспортным протоколам.

.. _rst-markup-send:

Отправка документов из черновика 
--------------------------------

Метод: `POST Send`_

На выходе данного метода получается документооборот, с которым продолжается работа с помощью методов блока :doc:`Docflow</dc/index>`.


Получение списка задач черновика
--------------------------------

Метод: `GET DraftTasks`_

.. _rst-markup-DraftTasks:

Проверка статуса задачи черновика по TaskId
-------------------------------------------

Метод: `GET DraftTask`_

Метод  возвращает результат выполнения задачи. Модель ответа зависит от типа поставленной задачи: для задачи проверки вернется `модель данных`_ CheckResult, подготовки - PrepareResult, отправки - Docflow, подписания - CryptOperationStatusResult.